{"version":3,"file":"main.b4b2fe4ad8b3f30c0f2c.chunk.js","sources":["webpack:///./src/ui.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js"],"sourcesContent":["\nexport function ui() {\n  $('body').css('background', _.join(['blue'], ''));\n}\n\n","\n// import Header from './header';\n// import Content from './content';\n// import avatar from './avatar.jpg';\n// import createAvatar from './createAvatar';\n// import style from './index.scss'; // css modulation\n\n// import './index.scss';\n\n// ---------  css modulation in style loader ---------\n// createAvatar();\n\n// var img = new Image();\n// img.src = avatar;\n// // css modulation: let \n// img.classList.add(style.avatar);\n// var root = document.getElementById('root');\n// root.append(img);\n\n// console.log(avatar);\n\n// ------------ .js loader ---------\n// new Header();\n// new Content();\n\n// -----------  font loader ----------\n\n// var root = document.getElementById('root');\n// root.innerHTML = '<div class=\"iconfont iconicon_add\">abc</div>';\n\n// console.log('hello world -- Rick!!!!');\n\n// ---- hot module replacement -----\n\n// import './style.css';\n\n// var btn = document.createElement('button');\n// btn.innerHTML = 'Click';\n// document.body.appendChild(btn);\n\n// btn.onclick = function() {\n//   var div = document.createElement('div');\n//   div.innerHTML = 'item';\n//   document.body.appendChild(div);\n// }\n\n\n\n// import counter from './counter';\n// import number from './number';\n\n// counter();\n// number();\n\n\n// // only hope the module no change by the other module change.\n// if(module.hot) {\n//   module.hot.accept('./number', () => {\n    \n//     document.body.removeChild(document.getElementById('number'));\n//     number();\n//   })\n// }\n\n// ----- es6 ------\n// for some common code use...\n// import \"@babel/polyfill\";\n\n// const arr = [\n//   new Promise(() => {}),\n//   new Promise(() => {})\n// ];\n\n// arr.map((item) => {\n//   console.log(item);\n// });\n\n// ---- react loader ------\n// import \"@babel/polyfill\";\n\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n\n// class App extends Component {\n//   render() {\n//     return (<div>Hello world</div>)\n//   }\n// }\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// import { add } from './math';\n\n// add(1, 8);\n\n// import _ from 'lodash';\n// import $ from 'jquery';\n\n// console.log(_.join(['a', 'b', 'c'], '*'));\n\n// main.js get lodash.js and main.js, when working file changes, only load main.js\n\n// function getComponent() {\n//   return import('lodash').then(({default: _}) => {\n//     var element = document.createElement('div');\n//     element.innerHTML = _.join(['a', 'b'], '---');\n//     return element;\n//   })\n// }\n\n\n// async function getComponent() { // lazy loading\n//   const { default: _ } = await import(/* webpackPrefetch: true */ 'lodash');\n//   const element = document.createElement('div');\n//   element.innerHTML = _.join(['a', 'b'], '---');\n//   return element;\n// }\n\n// document.addEventListener('click', () => {\n//   getComponent().then(ele => {\n//     document.body.appendChild(ele);\n//   });\n// });\n\n\n\n// ------- lazy load ----\n// document.addEventListener('click', () => {\n//   // const element = document.createElement('div');\n//   // // element.innerHTML = _.join(['a', 'b'], '---');\n//   // element.innerHTML = 'ok';\n//   // document.body.appendChild(element);\n//   import (/* webpackPrefetch: true */ './click.js').then(({default: func}) => {\n//     func();\n//   })\n// })\n\n\n// -------- css chunks -------------\n\n// import './style.css';\n// import './style1.css';\n\n// console.log('hello world');\n\n\n// ------ cache --------\n\nimport _ from 'lodash';\nimport $ from 'jquery';\n\nimport { ui } from './ui';\n\nui();\n\nconst dom = $('<div>');\ndom.html(_.join(['rick', 'huang'], '---'));\n$('body').append(dom);\n\nconsole.log(this === window);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"mappings":";;;;;;;AACA;AAAA;AACA;AACA;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}